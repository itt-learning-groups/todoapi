stages:
  - test
  - build

variables:
  # Override default docker registry: Use Docker Hub
  CI_REGISTRY: docker.io

unit-test:
  stage: test
  image: golang:1.16-alpine
  before_script:
    - apk add --update make
  script:
    - make build
    - make test-unit

api-test:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --update --no-cache make docker-compose
  script:
    - make test-api-docker

push public image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "${CI_REGISTRY_IMAGE}${tag}" .
    - docker push "${CI_REGISTRY_IMAGE}${tag}"

push private image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "${CI_REGISTRY_IMAGE_PRIVATE}${tag}" .
    - docker push "${CI_REGISTRY_IMAGE_PRIVATE}${tag}"
